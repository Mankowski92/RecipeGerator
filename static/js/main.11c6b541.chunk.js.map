{"version":3,"sources":["components/AddToFridge.js","components/ViewJoke.js","components/RandomRecipe.js","components/SearchRecipe.js","components/ReceivedRecipes.js","components/RecipeDetails.js","components/HamburgerMenu.js","components/About.js","components/Contact.js","components/App/App.js","serviceWorker.js","index.js"],"names":["AddToFridge","useState","value","setValue","ingredients","setIngredient","onSubmit","e","preventDefault","prevState","className","type","placeholder","onChange","target","map","ingredient","ViewJoke","data","setData","useEffect","fetch","method","headers","then","response","ok","json","Error","catch","err","console","error","message","text","RandomRecipe","log","recipes","title","src","image","alt","dangerouslySetInnerHTML","__html","instructions","SearchRecipe","props","query","setQuery","cuisine","setCuisine","diet","setDiet","excludeIngredients","setexcIudeIngredients","intolerances","setIntolerances","number","setNumber","Form","Row","Group","as","Col","controlId","Label","Control","Button","onClick","onFound","results","ReceivedRecipes","onDetailsClick","recipe","key","id","readyInMinutes","RecipeDetails","recipeInfo","healthScore","summary","HamburgerMenuPage","state","collapseID","toggleCollapse","setState","color","light","this","isOpen","navbar","left","active","to","Component","About","Contact","MainView","toggleOpen","showRandomRecipe","setShowRandomRecipe","ShowSearchedRecipe","setShowSearchedRecipe","receivedRecipes","setReceivedRecipes","joke","setJoke","addToFridge","setaddToFridge","setRecipeInfo","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11c6b541.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport \"../scss/AddToFridge.scss\";\n\n\nconst AddToFridge = ()=>{\n  const [value,setValue]  = useState('');\n  const [ingredients, setIngredient] = useState([]);\n\n  // const array = []\n  // ingredients.forEach(function(element) { ///// W tym miejscu przenoszę wpisane rzeczy z li do nowej tablicy\n  // array.push(element)\n  // }\n\n  const handleAddClick = (e) =>{\n    e.preventDefault()\n    setIngredient(prevState => [...prevState, value])\n  }\n  \n\n  return (\n    <form onSubmit={handleAddClick}>\n        <input className=\"ingredient\" type = \"text\" placeholder =\"Add ingredient to fridge\" onChange={(e)=>setValue(e.target.value)} value={value} />\n        <input className=\"asdf\" type =\"submit\"  value=\"Add\"/>\n        <ul>\n          {ingredients.map(ingredient => <li>{ingredient}</li>)}\n        </ul>\n    </form>\n  )\n}\n\nexport default AddToFridge\n\n\n\n","import React, {useState, useEffect} from \"react\";\nimport \"../scss/Joke.scss\";\n\nconst ViewJoke = () => {\n    const [data, setData] = useState(false);\n\n    // const ingredientsList = ['bananas', 'apples', 'cheese', 'crackers'];\n\n    useEffect(() => {\n        fetch(\"https://api.spoonacular.com/food/jokes/random?apiKey=72537751dcd74f0cbe54623e5064fa3b\", \n        {\n        method: \"GET\",\n        headers: {  \n        \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(\"net error\");\n            }\n        })\n        .then(data => {\n            setData(data);\n            })\n        .catch(err => {\n            console.error(\"Error appeard - \" + err.message)\n        })\n    },[])\n\n    if (data ===false ) {\n        return <h1>Ładuję...</h1>\n    }\n    return (\n        <div className=\"joke-div\">\n            {data.text}\n        </div>\n      );\n    }\n\nexport default ViewJoke","import React, {useState, useEffect} from \"react\";\nimport \"../scss/RandomRecipe.scss\"\n\nconst RandomRecipe = () => {\n    const [data, setData] = useState(false);\n\n    useEffect(() => {\n        fetch(\"https://api.spoonacular.com/recipes/random?apiKey=72537751dcd74f0cbe54623e5064fa3b\", \n        {\n        method: \"GET\",\n        headers: {  \n        \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(\"Some hungry error apeard\");\n            }\n        })\n        .then(data => {\n            setData(data);\n            console.log(data)\n            })\n        .catch(err => {\n            console.error(\"Unfortunately, there was a hungry mistake: \" + err.message)\n        })\n    },[])\n\n    if (data ===false ) {\n        return <h1>Brace yourself recipe is coming...</h1>\n    }\n    return (\n        <div>\n            <h2>{data.recipes[0].title}</h2>\n          <img src={data.recipes[0].image} alt=\"Tekst alternatywny\"></img>\n          <div>\n              <h3>Preparation instruction</h3>\n              <span dangerouslySetInnerHTML={{__html: data.recipes[0].instructions}} />\n          </div>\n        </div>\n      );\n    }\n\nexport default RandomRecipe","import React, {useState} from \"react\";\nimport \"../scss/SearchRecipe.scss\"\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\n\n\nconst SearchRecipe = (props) => {\n    const [data] = useState(null);\n    const [query, setQuery] = useState(\"\");\n    const [cuisine, setCuisine] = useState(\"\");\n    const [diet, setDiet] = useState(\"\");\n    const [excludeIngredients, setexcIudeIngredients] = useState(\"\");\n    const [intolerances, setIntolerances] = useState(\"\");\n    const [number, setNumber] = useState(2);\n\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        fetch(`https://api.spoonacular.com/recipes/search?query=${query}&cuisine=${cuisine}&diet=${diet}&excludeIngredients=${excludeIngredients}&intolerances=${intolerances}&number=${number}&apiKey=72537751dcd74f0cbe54623e5064fa3b`, \n        {\n        method: \"GET\",\n        headers: {  \n        \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(\"Some hungry error apeard\");\n            }\n        })\n        .then(data => {\n            props.onFound(data.results);\n            // console.log(data)\n        })\n            \n        .catch(err => {\n            console.error(\"Unfortunately, there was a hungry mistake: \" + err.message)\n        })\n    }\n    \n    if (data ===false ) {\n        return <h1>Searching...</h1>\n        }\n    \n    return (\n\n<Form>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridText\">\n      <Form.Label>Dish type</Form.Label>\n      <Form.Control value={query} onChange={e => setQuery(e.target.value)} type=\"text\" placeholder=\"e.g Hamburger\" />\n    </Form.Group>\n    <Form.Group as={Col} controlId=\"formGridState\">\n      <Form.Label>Cousine type</Form.Label>\n      <Form.Control value={cuisine} onChange={e => setCuisine(e.target.value)} as=\"select\">\n        <option value=\"\">All</option>\n        <option value=\"african\">African</option>\n        <option value=\"american\">American</option>\n        <option value=\"british\">British</option>\n        <option value=\"cajun\">Cajun</option>\n        <option value=\"caribbean\">Caribbean</option>\n        <option value=\"chinese\">Chinese</option>\n        <option value=\"eastern european\">Eastern European</option>\n        <option value=\"european\">European</option>\n        <option value=\"french\">French</option>\n        <option value=\"german\">German</option>\n        <option value=\"greek\">Greek</option>\n        <option value=\"indian\">Indian</option>\n        <option value=\"irish\">Irish</option>\n        <option value=\"italian\">Italian</option>\n        <option value=\"japanese\">Japanese</option>\n        <option value=\"jewish\">Jewish</option>\n        <option value=\"korean\">Korean</option>\n        <option value=\"latin american\">Latin American</option>\n        <option value=\"mediterranean\">Mediterranean</option>\n        <option value=\"mexican\">Mexican</option>\n        <option value=\"eiddle eastern\">Middle Eastern</option>\n        <option value=\"nordic\">Nordic</option>\n        <option value=\"southern\">Southern</option>\n        <option value=\"spanish\">Spanish</option>\n        <option value=\"thai\">Thai</option>\n        <option value=\"vietnamese\">Vietnamese</option>\n      </Form.Control>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridText\">\n      <Form.Label>Excluded ingredients</Form.Label>\n      <Form.Control value={excludeIngredients} onChange={e => setexcIudeIngredients(e.target.value)} type=\"text\" placeholder=\"e.g Pasta\" />\n    </Form.Group>\n    <Form.Group as={Col} controlId=\"formGridState\">\n      <Form.Label>Diet type</Form.Label>\n      <Form.Control value={diet} onChange={e => setDiet(e.target.value)} as=\"select\">\n        <option value=\"\">All</option>\n        <option value=\"gluten free\">Gluten Free</option>\n        <option value=\"vegetarian\">Vegetarian</option>\n        <option value=\"lacto-vegetarian\">Lacto-Vegetarian</option>\n        <option value=\"ovo-vegetarian\">Ovo-Vegetarian</option>\n        <option value=\"vegan\">Vegan</option>\n        <option value=\"pescetarian\">Pescetarian</option>\n        <option value=\"paleo\">Paleo</option>\n        <option value=\"primal\">Primal</option>\n        <option value=\"whole30\">Whole30</option>\n      </Form.Control>\n    </Form.Group>\n  </Form.Row>\n  <Form.Row>\n    <Form.Group as={Col} controlId=\"formGridText\">\n      <Form.Label>How many recipes for you?</Form.Label>\n      <Form.Control value={number} onChange={e => setNumber(e.target.value)} type=\"number\" placeholder=\"e.g 3- (up to 100)\" />\n    </Form.Group>\n    <Form.Group as={Col} controlId=\"formGridState\">\n      <Form.Label>Intolerances</Form.Label>\n      <Form.Control value={intolerances} onChange={e => setIntolerances(e.target.value)} as=\"select\">\n        <option value=\"\">None</option>\n        <option value=\"dairy\">Dairy</option>\n        <option value=\"egg\">Egg</option>\n        <option value=\"gluten\">Gluten</option>\n        <option value=\"grain\">Grain</option>\n        <option value=\"peanut\">Peanut</option>\n        <option value=\"seafood\">Seafood</option>\n        <option value=\"sesame\">Sesame</option>\n        <option value=\"shellfish\">Shellfish</option>\n        <option value=\"soy\">Soy</option>\n        <option value=\"sulfite\">Sulfite</option>\n        <option value=\"tree nut\">Tree aNut</option>\n        <option value=\"wheat\">Wheat</option>\n      </Form.Control>\n    </Form.Group>\n  </Form.Row>\n  <Button onClick={handleSubmit}>\n    Submit\n  </Button>\n</Form>\n\n      );\n    }\n\n\nexport default SearchRecipe","import React from \"react\";\nimport \"../scss/ReceivedRecipes.scss\"\n\nconst ReceivedRecipes = ({recipes,onDetailsClick}) => {\n    \nconsole.log(recipes);\nreturn (\n\n  <div className=\"receivedRecipes-container\">\n    {recipes.map((recipe) => {\n      return (\n      <div key={recipe.id}>\n        <p className=\"recipe-title\">{recipe.title}</p>\n        <p>Preparation time: {recipe.readyInMinutes}</p>\n        <button onClick={()=>onDetailsClick(recipe.id)}>See more</button>\n      </div>\n      )\n    })}\n  </div>\n  );\n}\n\nexport default ReceivedRecipes","import React, {useState, useEffect} from \"react\";\nimport \"../scss/RecipeDetails.scss\"\n\nconst RecipeDetails = ({recipeInfo}) => {\n    const [data, setData] = useState(false);\n\n    useEffect(() => {\n        fetch(`https://api.spoonacular.com/recipes/${recipeInfo}/information?apiKey=72537751dcd74f0cbe54623e5064fa3b`, \n        {\n        method: \"GET\",\n        headers: {  \n        \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                throw new Error(\"Some hungry error apeard\");\n            }\n        })\n        .then(data => {\n            setData(data);\n            console.log(data)\n            })\n        .catch(err => {\n            console.error(\"Unfortunately, there was a hungry mistake: \" + err.message)\n        })\n    },[recipeInfo])\n\n    if (data ===false ) {\n        return <h1>Brace yourself recipe is coming...</h1>\n    }\n    return (\n        <div className= \"detail-container\">\n            <div className= \"title-img-container\">\n            <p>\n                Dish health Score:{data.healthScore}\n            </p>    \n            <img className= \"recipeDetail-image\" src={data.image} alt=\"Tekst alternatywny\"></img>\n            </div>\n            <div className= \"summary-container\">\n                <span dangerouslySetInnerHTML={{__html: data.summary}} />\n            </div>\n            <div className= \"summary-container\">\n            </div>\n        </div>\n      );\n    }\n\nexport default RecipeDetails","import React, { Component } from 'react';\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBContainer\n} from 'mdbreact';\nimport \"../scss/HamburgerMenu.scss\"\n\nclass HamburgerMenuPage extends Component {\n  state = {\n    collapseID: ''\n  };\n\n  toggleCollapse = collapseID => () => {\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n    }));\n  };\n\n  render() {\n    return (\n        <MDBContainer>\n          <MDBNavbar\n            color='light-blue lighten-4'\n            light\n          >\n            <MDBContainer>\n              <MDBNavbarBrand>Give up all hope you who enter here!</MDBNavbarBrand>\n              <MDBNavbarToggler\n                onClick={this.toggleCollapse('navbarCollapse1')}\n              />\n              <MDBCollapse\n                id='navbarCollapse1'\n                isOpen={this.state.collapseID}\n                navbar\n              >\n                <MDBNavbarNav left>\n                  <MDBNavItem active>\n                    <MDBNavLink to='/about'>About me</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to='/contact'>Contact</MDBNavLink>\n                  </MDBNavItem>\n                  <MDBNavItem>\n                    <MDBNavLink to='/#/'>Main Page</MDBNavLink>\n                  </MDBNavItem>\n                </MDBNavbarNav>\n              </MDBCollapse>\n            </MDBContainer>\n          </MDBNavbar>\n        </MDBContainer>\n    );\n  }\n}\n\nexport default HamburgerMenuPage;","import React from \"react\";\nimport \"../scss/About.scss\"\nimport HamburgerMenuPage from \"./HamburgerMenu\";\n\n\nconst About = () => {\n\nreturn (\n    <>\n    <div className=\"main-about-container\">\n        <HamburgerMenuPage/>\n        <div className=\"content\">\n            <h1>Marcin Mankowski</h1>\n        </div>\n   </div>\n   </>\n)\n\n}\n\nexport default About","import React from \"react\";\nimport \"../scss/Contact.scss\"\nimport HamburgerMenuPage from \"./HamburgerMenu\";\n\n\n\nconst Contact = () => {\n\n\nreturn (\n    <>\n    <div className=\"main-contact-container\">\n        <HamburgerMenuPage/>\n        <div className=\"content\">\n            <h1>How dare you try to contact me!</h1>\n            <div className=\"greta\"></div>\n        </div>\n    </div>\n    </>\n)\n\n}\n\nexport default Contact","import React,{useState} from 'react';\nimport '../../scss/App.scss';\nimport AddToFridge from \"../../components/AddToFridge\";\nimport ViewJoke from '../ViewJoke';\nimport RandomRecipe from \"../RandomRecipe\";\nimport SearchRecipe from \"../SearchRecipe\"\nimport ReceivedRecipes from '../ReceivedRecipes';\nimport RecipeDetails from \"../RecipeDetails\";\nimport HamburgerMenuPage from \"../HamburgerMenu\";\nimport About from \"../About\"\nimport Contact from \"../Contact\"\n\nimport {HashRouter as Router,Switch,Route} from \"react-router-dom\";\n\nfunction MainView() {\n\n  const [isOpen,toggleOpen] = useState(false);\n  const [showRandomRecipe, setShowRandomRecipe] = useState(false)\n  const [ShowSearchedRecipe, setShowSearchedRecipe] = useState(false)\n  const [receivedRecipes, setReceivedRecipes] = useState(null)\n  const [joke, setJoke] = useState(false)\n  const [addToFridge, setaddToFridge] = useState(false)\n  const [recipeInfo,setRecipeInfo] = useState(false)\n\n  const handleFridgeClick = ()=>{\n      toggleOpen(!isOpen)\n\n      if(!isOpen){\n        console.log(\"otwiera się\");\n        \n      }else{\n        console.log(\"zamyka się \");\n      }\n  }\n\n  const handleShowRandomRecipe = () => {\n    setShowRandomRecipe(true)\n    setJoke(false)\n    setaddToFridge(false)\n    setShowSearchedRecipe(false)\n  }\n\n  const handleShowSearchedRecipe = () => {\n    setShowSearchedRecipe(true)\n    setShowRandomRecipe(false)\n    setJoke(false)\n    setaddToFridge(false)\n  }\n\n  const handleJoke = () => {\n    setJoke(true)\n    setShowSearchedRecipe(false)\n    setShowRandomRecipe(false)\n    setaddToFridge(false)\n  }\n\n  const handleAddToFridge = () => {\n    setaddToFridge(true)\n    setShowSearchedRecipe(false)\n    setShowRandomRecipe(false)\n    setJoke(false)\n  }\n\n\n  return (\n    <>\n      <div className= \"main-container\">\n      <HamburgerMenuPage/>\n        \n        <div className=\"main-row-container\">\n          <div className= \"RandomRecipe-container\">\n            {showRandomRecipe && <RandomRecipe/>}\n            {ShowSearchedRecipe &&<SearchRecipe onFound={setReceivedRecipes}/>}\n            {((receivedRecipes !== null) && ShowSearchedRecipe) &&<ReceivedRecipes recipes={receivedRecipes} onDetailsClick={setRecipeInfo}/>}\n            {addToFridge && <AddToFridge/>}\n            {joke && <ViewJoke/>}\n          </div>\n          <div className= \"fridge-container\">\n\t\t        <div className=\"fridge\">\n\t\t\t        <div className=\"back-wall\">\n                <div className =\"back-wall-button-container\">\n                  <button className=\"button-fridge button-1\" onClick= {handleShowRandomRecipe} >Random recipe</button>\n                  <button className=\"button-fridge button-2 button-modifier\" onClick= {handleShowSearchedRecipe} >Match recipe</button>\n                  <button className=\"button-fridge button-3 button-modifier\" onClick= {handleAddToFridge} >Add to fridge</button>\n                  <button className=\"button-fridge button-4 button-modifier\" onClick= {handleJoke} >Joke</button>\n                </div>\n              </div>\n\t\t  \t      <div className=\"shelf one\"></div>\n\t\t\t        <div className=\"shelf two\"></div>\n\t\t    \t    <div className=\"shelf three\"></div>\n              <div className= {isOpen ? \"door door-open\" : \"door\"} onClick={handleFridgeClick}> </div>\n\t\t        </div>\n          </div>\n          <div className=\"infos-container\">\n            {recipeInfo&&<RecipeDetails recipeInfo={recipeInfo} />}\n          </div>\n        </div>\n      </div>\n        </>\n   );\n  }\n\nconst App = ()=>{\n  return (\n    <Router>\n\n      <Switch>\n        <Route exact path=\"/\" component={MainView}/>\n        <Route  path=\"/about\" component={About}/>\n        <Route  path=\"/contact\" component={Contact}/>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}